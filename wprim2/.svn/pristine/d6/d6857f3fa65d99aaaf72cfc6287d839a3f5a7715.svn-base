package com.ninemax.service.impl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.ninemax.model.Journal;
import com.ninemax.service.IJournalService;
import com.ninemax.util.JournalStatus;
import com.ninemax.util.RoleName;
import com.ninemax.util.UserUtil;

public class IJournalServiceImpl implements IJournalService {

	// 期刊名录保存
	@Override
	public void save(String journalTitle, String VernacularJournalTitle,
			String country, String publisher, String ISSN1, String ISSN2,
			String EISSN1, String EISSN2, String ElectronicLinks,
			String EditorInChief, String EditorEmail, String Abbreviation,
			String StartYear, String suspendedtime, String Description,
			String start_volume, String start_issue) {
		SimpleDateFormat df = new SimpleDateFormat("yy-MM-dd HH:mm:ss.SSS");
		// TODO Auto-generated method stub
		Journal journal = new Journal().set("journalTitle", journalTitle)
				.set("VernacularJournalTitle", VernacularJournalTitle)
				.set("country", country)
				.set("publisher", publisher)
				.set("ISSN", ISSN1 + "-" + ISSN2)
				.set("EISSN", EISSN1 + "-" + EISSN2)
				.set("ElectronicLinks", ElectronicLinks)
				.set("EditorInChief", EditorInChief)
				.set("EditorEmail", EditorEmail)
				.set("Abbreviation", Abbreviation)
				.set("StartYear", StartYear)
				.set("suspendedtime", suspendedtime)
				.set("Description", Description)
				.set("start_volume", start_volume)
				.set("start_issue", start_issue);

		// 添加UUID
		journal.set("globalid", UUID.randomUUID().toString().replace("-", ""));
		// 添加系统时间
		journal.set("CRTIME", df.format(new Date()));
		journal.set("PubDate", df.format(new Date()));
		journal.save();
	}

	// 查询某一期刊名录
	@Override
	public Record queryJournal(int id) {

		return Db.findById("WSSJOURNAL", "JournalId", id);
	}

	@Override
	public void delete(int id) {
		// TODO Auto-generated method stub
		Db.deleteById("WSSJOURNAL", "JournalId", id);
	}

	@Override
	public Object search(Record curr_user, String pageNumber,
			String journalTitle, String country, String reviewStatus) {
		// 预处理
		int intPageNumber = Integer.valueOf(pageNumber);
		int pageSize = 20;
		String userCountry = curr_user.getStr("Country");

		// 结果集
		Page<Record> journalList = null;

		// 1.查找期刊结果集
		// 系统管理员可以看到所有期刊
		if (UserUtil.haveRole(curr_user, RoleName.SYSTEMADMINISTRATOR)) {
			journalList = Db.paginate(intPageNumber, pageSize, "select *",
					"from WSSJOURNAL where journalTitle like '%" + journalTitle
							+ "%' and country = '" + country
							+ "' and review_status = '" + reviewStatus);
		} else {
			// 国家数据管理员可以看到所有非未提交状态的期刊和本国未提交状态的期刊
			if (UserUtil.haveRole(curr_user, RoleName.NATIONALDATAMANAGER)) {
				journalList = Db.paginate(intPageNumber, pageSize, "select *",
						"from WSSJOURNAL where journalTitle like '%"
								+ journalTitle + "%' and ((review_status = '"
								+ reviewStatus + "' and review_status != '"
								+ JournalStatus.UNSUBMITTED
								+ "' and country = '" + country
								+ "') or (review_status = '"
								+ JournalStatus.UNSUBMITTED
								+ "' and country = '" + userCountry + "')");
			} else {
				// 期刊所属编辑部可以看到所有非未提交状态的期刊和本期刊编辑部的期刊
				if (UserUtil.haveRole(curr_user,
						RoleName.JOURNALEDITORIALDEPARTMENT)) {
					journalList = Db.paginate(
							intPageNumber,
							pageSize,
							"select *",
							"from WSSJOURNAL where journalTitle like '%"
									+ journalTitle
									+ "%' and ((review_status != '"
									+ JournalStatus.UNSUBMITTED
									+ "' and review_status = '" + reviewStatus
									+ "' and country = '" + country
									+ "') or (review_status = '"
									+ JournalStatus.UNSUBMITTED
									+ "' and country = '" + userCountry
									+ "' and edit_department = '"
									+ curr_user.getStr("EditDep") + "'))");
				} else {
					// 其他人员可以看到所有非未提交状态的期刊
					journalList = Db.paginate(intPageNumber, pageSize,
							"select *",
							"from WSSJOURNAL where review_status != '"
									+ JournalStatus.UNSUBMITTED
									+ "' and review_status = '" + reviewStatus
									+ "' and country = '" + country
									+ "' and journalTitle like '%"
									+ journalTitle + "%'");
				}
			}
		}

		List<Record> journals = journalList.getList();
		if (journals != null && journals.size() != 0) {
			// 2.判断期刊是否可以修改、删除
			// 2.1角色验证，系统管理员、期刊编辑部、国家数据管理员可以进行修改、删除
			List<String> roleNames = new ArrayList<String>();
			roleNames.add(RoleName.SYSTEMADMINISTRATOR);
			roleNames.add(RoleName.JOURNALEDITORIALDEPARTMENT);
			roleNames.add(RoleName.NATIONALDATAMANAGER);
			if (UserUtil.haveAnyOfRoles(curr_user, roleNames)) {
				// 2.2期刊状态验证，为提交和评审通过的期刊可以修改；未提交的期刊可以删除
				for (Record journal : journals) {
					String journalReviewStatus = journal
							.getStr("review_status");
					journal.set(
							"canModify",
							(journalReviewStatus
									.equals(JournalStatus.UNSUBMITTED) || journalReviewStatus
									.equals(JournalStatus.APPROVEDBYRJSC)) ? true
									: false).set(
							"canDelete",
							journalReviewStatus
									.equals(JournalStatus.UNSUBMITTED) ? true
									: false);
				}
			} else {
				for (Record journal : journals) {
					journal.set("canModify", false).set("canDelete", false);
				}
			}

			// 3.判断期刊是否可以进行国家级评审和国际级评审
			for (Record journal : journals) {
				String journalReviewStatus = journal.getStr("review_status");
				// 3.1.1提交至NJSC和NJSC评审中的期刊可以进行国家级评审
				if (journalReviewStatus.equals(JournalStatus.SUBMITTEDTONJSC)
						|| journalReviewStatus
								.equals(JournalStatus.REVIEWEDBYNJSC)) {
					// 3.1.2国家期刊评委和国家期刊评委主席可以进行国家级评审
					List<String> roleNames2 = new ArrayList<String>();
					roleNames2.add(RoleName.NATIONALJOURNALREVIEWEXPERT);
					roleNames2
							.add(RoleName.CHAIRMANOFNATIONALJOURNALREVIEWCOMMITTEE);
					journal.set("canNationalReview", UserUtil.haveAnyOfRoles(
							curr_user, roleNames2) ? true : false);
				} else {
					// 3.2.1提交至RJSC和RJSC评审中的期刊可以进行国际级评审
					if (journalReviewStatus
							.equals(JournalStatus.SUBMITTEDTORJSC)
							|| journalReviewStatus
									.equals(JournalStatus.REVIEWEDBYRJSC)) {
						// 3.2.2国际期刊评委和国际期刊评委主席可以进行国际级评审
						List<String> roleNames3 = new ArrayList<String>();
						roleNames3.add(RoleName.REGIONALJOURNALREVIEWEXPERT);
						roleNames3
								.add(RoleName.CHAIRMANOFREGIONALJOURNALREVIEWCOMMITTEE);
						journal.set("canRegionalReview", UserUtil
								.haveAnyOfRoles(curr_user, roleNames3) ? true
								: false);
					}
				}
			}
		}

		return journalList;
	}

	@Override
	public Object countPageNumberList(int pageNumber, int totalPages) {
		// 显示页码总数
		int count = 10;
		if (pageNumber < ((count / 2) + (count / 2 == 0 ? 2 : 1))) {
			List<Integer> result = new ArrayList<Integer>();
			for (int i = 1; i <= pageNumber; i++) {
				result.add(i);
			}
			return result;
		} else if (pageNumber > (totalPages - ((count / 2) + ((count / 2) == 0 ? 1
				: 0)))) {
			List<Integer> result = new ArrayList<Integer>();
			for (int i = totalPages - (count - 1); i <= totalPages; i++) {
				result.add(i);
			}
			return result;
		} else {
			if (count / 2 == 0) {
				List<Integer> result = new ArrayList<Integer>();
				for (int i = pageNumber - (count / 2 - 1); i < pageNumber
						+ (count / 2 - 1); i++) {
					result.add(i);
				}
				return result;
			} else {
				List<Integer> result = new ArrayList<Integer>();
				for (int i = pageNumber - (count / 2); i <= pageNumber
						+ (count / 2); i++) {
					result.add(i);
				}
				return result;
			}
		}
	}

	@Override
	public List<Record> findCountry() {
		// TODO Auto-generated method stub
		return Db.find("select * from Wprim_Country");
	}
}
